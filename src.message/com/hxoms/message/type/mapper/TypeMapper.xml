<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hxoms.message.type.mapper.TypeMapper">
  <resultMap id="BaseResultMap" type="com.hxoms.message.type.entity.Type">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="par_id" jdbcType="VARCHAR" property="parId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_root" jdbcType="VARCHAR" property="isRoot" />
  </resultMap>

  <!--######################################################自定义######################################################-->
  <!--typeCustom结果集-->
  <resultMap id="TypeCustom" type="com.hxoms.message.type.entity.TypeCustom" extends="BaseResultMap">
    <collection column="id" property="typeLists" javaType="java.util.ArrayList" ofType="com.hxoms.message.type.entity.TypeCustom" select="getTypeLists"/>
  </resultMap>

  <!--获取消息分类列表-->
  <select id="getTypeLists" resultMap="TypeCustom" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from m_type
    where par_id = #{id,jdbcType=VARCHAR}
    order by create_time desc
  </select>

  <!--查询所有分类-->
  <select id="selectAllType" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from m_type
    order by create_time desc
  </select>
  <!--######################################################逆向工程生成######################################################-->
  <sql id="Base_Column_List">
    id, name, par_id, create_time, is_root
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from m_type
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from m_type
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.hxoms.message.type.entity.Type">
    insert into m_type (id, name, par_id,
      create_time, is_root)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{parId,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{isRoot,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hxoms.message.type.entity.Type">
    insert into m_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="parId != null">
        par_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isRoot != null">
        is_root,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parId != null">
        #{parId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRoot != null">
        #{isRoot,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hxoms.message.type.entity.Type">
    update m_type
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parId != null">
        par_id = #{parId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRoot != null">
        is_root = #{isRoot,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hxoms.message.type.entity.Type">
    update m_type
    set name = #{name,jdbcType=VARCHAR},
      par_id = #{parId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_root = #{isRoot,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>