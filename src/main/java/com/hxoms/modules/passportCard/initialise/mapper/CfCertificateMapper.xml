<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hxoms.modules.passportCard.initialise.mapper.CfCertificateMapper">
  <resultMap id="BaseResultMap" type="com.hxoms.modules.passportCard.initialise.entity.CfCertificate">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 17 17:18:01 CST 2020.
    -->
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="OMS_ID" jdbcType="VARCHAR" property="omsId" />
    <result column="A0100" jdbcType="VARCHAR" property="a0100" />
    <result column="A0184" jdbcType="VARCHAR" property="a0184" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="PY" jdbcType="VARCHAR" property="py" />
    <result column="SEX" jdbcType="VARCHAR" property="sex" />
    <result column="CSRQ" jdbcType="DATE" property="csrq" />
    <result column="GJ" jdbcType="VARCHAR" property="gj" />
    <result column="CSDD" jdbcType="VARCHAR" property="csdd" />
    <result column="ZJLX" jdbcType="INTEGER" property="zjlx" />
    <result column="ZJXS" jdbcType="VARCHAR" property="zjxs" />
    <result column="XPLX" jdbcType="VARCHAR" property="xplx" />
    <result column="ZJHM" jdbcType="VARCHAR" property="zjhm" />
    <result column="QFJG" jdbcType="VARCHAR" property="qfjg" />
    <result column="QFDD" jdbcType="VARCHAR" property="qfdd" />
    <result column="QFRQ" jdbcType="DATE" property="qfrq" />
    <result column="YXQZ" jdbcType="DATE" property="yxqz" />
    <result column="SAVE_STATUS" jdbcType="VARCHAR" property="saveStatus" />
    <result column="CARD_STATUS" jdbcType="VARCHAR" property="cardStatus" />
    <result column="SURELY_UNIT" jdbcType="VARCHAR" property="surelyUnit" />
    <result column="SURELY_WAY" jdbcType="VARCHAR" property="surelyWay" />
    <result column="CABINET_NUM" jdbcType="VARCHAR" property="cabinetNum" />
    <result column="PLACE" jdbcType="VARCHAR" property="place" />
    <result column="COUNTER_NUM" jdbcType="INTEGER" property="counterNum" />
    <result column="EXCEPTION_MESSAGE" jdbcType="VARCHAR" property="exceptionMessage" />
    <result column="EXCEPTION_CONCLUSION" jdbcType="VARCHAR" property="exceptionConclusion" />
    <result column="EXCEPTION_HANDLER" jdbcType="VARCHAR" property="exceptionHandler" />
    <result column="EXCEPTION_SOLVEDATE" jdbcType="TIMESTAMP" property="exceptionSolvedate" />
    <result column="COMPARISON_RESULT" jdbcType="VARCHAR" property="comparisonResult" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="IMPORT_PERSON" jdbcType="VARCHAR" property="importPerson" />
    <result column="IMPORT_TIME" jdbcType="TIMESTAMP" property="importTime" />
    <result column="UPDATER" jdbcType="VARCHAR" property="updater" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="BaseResultMapExtend" type="com.hxoms.modules.passportCard.initialise.entity.CfCertificateExtend">
    <result column="saveStatusName" jdbcType="VARCHAR" property="saveStatusName" />
    <result column="cardStatusName" jdbcType="VARCHAR" property="cardStatusName" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 17 17:18:01 CST 2020.
    -->
    ID, OMS_ID, A0100, A0184, NAME, PY, SEX, CSRQ, GJ, CSDD, ZJLX, ZJXS, XPLX, ZJHM, 
    QFJG, QFDD, QFRQ, YXQZ, SAVE_STATUS, CARD_STATUS, SURELY_UNIT, SURELY_WAY, CABINET_NUM, 
    PLACE, COUNTER_NUM, EXCEPTION_MESSAGE, EXCEPTION_CONCLUSION, EXCEPTION_HANDLER, EXCEPTION_SOLVEDATE, 
    COMPARISON_RESULT, REMARK, IMPORT_PERSON, IMPORT_TIME, UPDATER, UPDATE_TIME
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 17 17:18:01 CST 2020.
    -->
    select 
    <include refid="Base_Column_List" />
    from cf_certificate
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 17 17:18:01 CST 2020.
    -->
    delete from cf_certificate
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.hxoms.modules.passportCard.initialise.entity.CfCertificate">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 17 17:18:01 CST 2020.
    -->
    insert into cf_certificate (ID, OMS_ID, A0100, 
      A0184, NAME, PY, SEX, 
      CSRQ, GJ, CSDD, ZJLX, 
      ZJXS, XPLX, ZJHM, QFJG, 
      QFDD, QFRQ, YXQZ, SAVE_STATUS, 
      CARD_STATUS, SURELY_UNIT, SURELY_WAY, 
      CABINET_NUM, PLACE, COUNTER_NUM, 
      EXCEPTION_MESSAGE, EXCEPTION_CONCLUSION, 
      EXCEPTION_HANDLER, EXCEPTION_SOLVEDATE, 
      COMPARISON_RESULT, REMARK, IMPORT_PERSON, 
      IMPORT_TIME, UPDATER, UPDATE_TIME
      )
    values (#{id,jdbcType=VARCHAR}, #{omsId,jdbcType=VARCHAR}, #{a0100,jdbcType=VARCHAR}, 
      #{a0184,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{py,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{csrq,jdbcType=DATE}, #{gj,jdbcType=VARCHAR}, #{csdd,jdbcType=VARCHAR}, #{zjlx,jdbcType=INTEGER}, 
      #{zjxs,jdbcType=VARCHAR}, #{xplx,jdbcType=VARCHAR}, #{zjhm,jdbcType=VARCHAR}, #{qfjg,jdbcType=VARCHAR}, 
      #{qfdd,jdbcType=VARCHAR}, #{qfrq,jdbcType=DATE}, #{yxqz,jdbcType=DATE}, #{saveStatus,jdbcType=VARCHAR}, 
      #{cardStatus,jdbcType=VARCHAR}, #{surelyUnit,jdbcType=VARCHAR}, #{surelyWay,jdbcType=VARCHAR}, 
      #{cabinetNum,jdbcType=VARCHAR}, #{place,jdbcType=VARCHAR}, #{counterNum,jdbcType=INTEGER}, 
      #{exceptionMessage,jdbcType=VARCHAR}, #{exceptionConclusion,jdbcType=VARCHAR}, 
      #{exceptionHandler,jdbcType=VARCHAR}, #{exceptionSolvedate,jdbcType=TIMESTAMP}, 
      #{comparisonResult,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{importPerson,jdbcType=VARCHAR}, 
      #{importTime,jdbcType=TIMESTAMP}, #{updater,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hxoms.modules.passportCard.initialise.entity.CfCertificate">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 17 17:18:01 CST 2020.
    -->
    insert into cf_certificate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="omsId != null">
        OMS_ID,
      </if>
      <if test="a0100 != null">
        A0100,
      </if>
      <if test="a0184 != null">
        A0184,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="py != null">
        PY,
      </if>
      <if test="sex != null">
        SEX,
      </if>
      <if test="csrq != null">
        CSRQ,
      </if>
      <if test="gj != null">
        GJ,
      </if>
      <if test="csdd != null">
        CSDD,
      </if>
      <if test="zjlx != null">
        ZJLX,
      </if>
      <if test="zjxs != null">
        ZJXS,
      </if>
      <if test="xplx != null">
        XPLX,
      </if>
      <if test="zjhm != null">
        ZJHM,
      </if>
      <if test="qfjg != null">
        QFJG,
      </if>
      <if test="qfdd != null">
        QFDD,
      </if>
      <if test="qfrq != null">
        QFRQ,
      </if>
      <if test="yxqz != null">
        YXQZ,
      </if>
      <if test="saveStatus != null">
        SAVE_STATUS,
      </if>
      <if test="cardStatus != null">
        CARD_STATUS,
      </if>
      <if test="surelyUnit != null">
        SURELY_UNIT,
      </if>
      <if test="surelyWay != null">
        SURELY_WAY,
      </if>
      <if test="cabinetNum != null">
        CABINET_NUM,
      </if>
      <if test="place != null">
        PLACE,
      </if>
      <if test="counterNum != null">
        COUNTER_NUM,
      </if>
      <if test="exceptionMessage != null">
        EXCEPTION_MESSAGE,
      </if>
      <if test="exceptionConclusion != null">
        EXCEPTION_CONCLUSION,
      </if>
      <if test="exceptionHandler != null">
        EXCEPTION_HANDLER,
      </if>
      <if test="exceptionSolvedate != null">
        EXCEPTION_SOLVEDATE,
      </if>
      <if test="comparisonResult != null">
        COMPARISON_RESULT,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="importPerson != null">
        IMPORT_PERSON,
      </if>
      <if test="importTime != null">
        IMPORT_TIME,
      </if>
      <if test="updater != null">
        UPDATER,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="omsId != null">
        #{omsId,jdbcType=VARCHAR},
      </if>
      <if test="a0100 != null">
        #{a0100,jdbcType=VARCHAR},
      </if>
      <if test="a0184 != null">
        #{a0184,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="py != null">
        #{py,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="csrq != null">
        #{csrq,jdbcType=DATE},
      </if>
      <if test="gj != null">
        #{gj,jdbcType=VARCHAR},
      </if>
      <if test="csdd != null">
        #{csdd,jdbcType=VARCHAR},
      </if>
      <if test="zjlx != null">
        #{zjlx,jdbcType=INTEGER},
      </if>
      <if test="zjxs != null">
        #{zjxs,jdbcType=VARCHAR},
      </if>
      <if test="xplx != null">
        #{xplx,jdbcType=VARCHAR},
      </if>
      <if test="zjhm != null">
        #{zjhm,jdbcType=VARCHAR},
      </if>
      <if test="qfjg != null">
        #{qfjg,jdbcType=VARCHAR},
      </if>
      <if test="qfdd != null">
        #{qfdd,jdbcType=VARCHAR},
      </if>
      <if test="qfrq != null">
        #{qfrq,jdbcType=DATE},
      </if>
      <if test="yxqz != null">
        #{yxqz,jdbcType=DATE},
      </if>
      <if test="saveStatus != null">
        #{saveStatus,jdbcType=VARCHAR},
      </if>
      <if test="cardStatus != null">
        #{cardStatus,jdbcType=VARCHAR},
      </if>
      <if test="surelyUnit != null">
        #{surelyUnit,jdbcType=VARCHAR},
      </if>
      <if test="surelyWay != null">
        #{surelyWay,jdbcType=VARCHAR},
      </if>
      <if test="cabinetNum != null">
        #{cabinetNum,jdbcType=VARCHAR},
      </if>
      <if test="place != null">
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="counterNum != null">
        #{counterNum,jdbcType=INTEGER},
      </if>
      <if test="exceptionMessage != null">
        #{exceptionMessage,jdbcType=VARCHAR},
      </if>
      <if test="exceptionConclusion != null">
        #{exceptionConclusion,jdbcType=VARCHAR},
      </if>
      <if test="exceptionHandler != null">
        #{exceptionHandler,jdbcType=VARCHAR},
      </if>
      <if test="exceptionSolvedate != null">
        #{exceptionSolvedate,jdbcType=TIMESTAMP},
      </if>
      <if test="comparisonResult != null">
        #{comparisonResult,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="importPerson != null">
        #{importPerson,jdbcType=VARCHAR},
      </if>
      <if test="importTime != null">
        #{importTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null">
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hxoms.modules.passportCard.initialise.entity.CfCertificate">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 17 17:18:01 CST 2020.
    -->
    update cf_certificate
    <set>
      <if test="omsId != null">
        OMS_ID = #{omsId,jdbcType=VARCHAR},
      </if>
      <if test="a0100 != null">
        A0100 = #{a0100,jdbcType=VARCHAR},
      </if>
      <if test="a0184 != null">
        A0184 = #{a0184,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="py != null">
        PY = #{py,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        SEX = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="csrq != null">
        CSRQ = #{csrq,jdbcType=DATE},
      </if>
      <if test="gj != null">
        GJ = #{gj,jdbcType=VARCHAR},
      </if>
      <if test="csdd != null">
        CSDD = #{csdd,jdbcType=VARCHAR},
      </if>
      <if test="zjlx != null">
        ZJLX = #{zjlx,jdbcType=INTEGER},
      </if>
      <if test="zjxs != null">
        ZJXS = #{zjxs,jdbcType=VARCHAR},
      </if>
      <if test="xplx != null">
        XPLX = #{xplx,jdbcType=VARCHAR},
      </if>
      <if test="zjhm != null">
        ZJHM = #{zjhm,jdbcType=VARCHAR},
      </if>
      <if test="qfjg != null">
        QFJG = #{qfjg,jdbcType=VARCHAR},
      </if>
      <if test="qfdd != null">
        QFDD = #{qfdd,jdbcType=VARCHAR},
      </if>
      <if test="qfrq != null">
        QFRQ = #{qfrq,jdbcType=DATE},
      </if>
      <if test="yxqz != null">
        YXQZ = #{yxqz,jdbcType=DATE},
      </if>
      <if test="saveStatus != null">
        SAVE_STATUS = #{saveStatus,jdbcType=VARCHAR},
      </if>
      <if test="cardStatus != null">
        CARD_STATUS = #{cardStatus,jdbcType=VARCHAR},
      </if>
      <if test="surelyUnit != null">
        SURELY_UNIT = #{surelyUnit,jdbcType=VARCHAR},
      </if>
      <if test="surelyWay != null">
        SURELY_WAY = #{surelyWay,jdbcType=VARCHAR},
      </if>
      <if test="cabinetNum != null">
        CABINET_NUM = #{cabinetNum,jdbcType=VARCHAR},
      </if>
      <if test="place != null">
        PLACE = #{place,jdbcType=VARCHAR},
      </if>
      <if test="counterNum != null">
        COUNTER_NUM = #{counterNum,jdbcType=INTEGER},
      </if>
      <if test="exceptionMessage != null">
        EXCEPTION_MESSAGE = #{exceptionMessage,jdbcType=VARCHAR},
      </if>
      <if test="exceptionConclusion != null">
        EXCEPTION_CONCLUSION = #{exceptionConclusion,jdbcType=VARCHAR},
      </if>
      <if test="exceptionHandler != null">
        EXCEPTION_HANDLER = #{exceptionHandler,jdbcType=VARCHAR},
      </if>
      <if test="exceptionSolvedate != null">
        EXCEPTION_SOLVEDATE = #{exceptionSolvedate,jdbcType=TIMESTAMP},
      </if>
      <if test="comparisonResult != null">
        COMPARISON_RESULT = #{comparisonResult,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="importPerson != null">
        IMPORT_PERSON = #{importPerson,jdbcType=VARCHAR},
      </if>
      <if test="importTime != null">
        IMPORT_TIME = #{importTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null">
        UPDATER = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hxoms.modules.passportCard.initialise.entity.CfCertificate">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 17 17:18:01 CST 2020.
    -->
    update cf_certificate
    set OMS_ID = #{omsId,jdbcType=VARCHAR},
      A0100 = #{a0100,jdbcType=VARCHAR},
      A0184 = #{a0184,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      PY = #{py,jdbcType=VARCHAR},
      SEX = #{sex,jdbcType=VARCHAR},
      CSRQ = #{csrq,jdbcType=DATE},
      GJ = #{gj,jdbcType=VARCHAR},
      CSDD = #{csdd,jdbcType=VARCHAR},
      ZJLX = #{zjlx,jdbcType=INTEGER},
      ZJXS = #{zjxs,jdbcType=VARCHAR},
      XPLX = #{xplx,jdbcType=VARCHAR},
      ZJHM = #{zjhm,jdbcType=VARCHAR},
      QFJG = #{qfjg,jdbcType=VARCHAR},
      QFDD = #{qfdd,jdbcType=VARCHAR},
      QFRQ = #{qfrq,jdbcType=DATE},
      YXQZ = #{yxqz,jdbcType=DATE},
      SAVE_STATUS = #{saveStatus,jdbcType=VARCHAR},
      CARD_STATUS = #{cardStatus,jdbcType=VARCHAR},
      SURELY_UNIT = #{surelyUnit,jdbcType=VARCHAR},
      SURELY_WAY = #{surelyWay,jdbcType=VARCHAR},
      CABINET_NUM = #{cabinetNum,jdbcType=VARCHAR},
      PLACE = #{place,jdbcType=VARCHAR},
      COUNTER_NUM = #{counterNum,jdbcType=INTEGER},
      EXCEPTION_MESSAGE = #{exceptionMessage,jdbcType=VARCHAR},
      EXCEPTION_CONCLUSION = #{exceptionConclusion,jdbcType=VARCHAR},
      EXCEPTION_HANDLER = #{exceptionHandler,jdbcType=VARCHAR},
      EXCEPTION_SOLVEDATE = #{exceptionSolvedate,jdbcType=TIMESTAMP},
      COMPARISON_RESULT = #{comparisonResult,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      IMPORT_PERSON = #{importPerson,jdbcType=VARCHAR},
      IMPORT_TIME = #{importTime,jdbcType=TIMESTAMP},
      UPDATER = #{updater,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>

	<select id="selectCfCertificateIPage" parameterType="com.hxoms.modules.passportCard.initialise.entity.parameterEntity.CfCertificatePageParam" resultType="com.hxoms.modules.passportCard.initialise.entity.CfCertificate">
		SELECT
		cc.ID AS ID,
		orp.INCUMBENCY_STATUS AS incumbencyStatus,
		orp.RF_B0000,
		cc.A0184 AS a0184,
		cc.NAME,
		cc.PY,
		cc.SEX,
		cc.CSRQ,
		cc.GJ,
		cc.ZWCSDD,
		cc.LOCATION,
		cc.zjlx,
		cc.ZJSJRQ,
		cc.ZJHM,
		cc.QFRQ,
		cc.IS_LOCK,
		cc.MANAGE_UNIT,
		cc.YXQZ,
		cc.CARD_STATUS,
		cc.CABINET_NUM,
		cc.EXCEPTION_MESSAGE,
		cc.IS_CABINET,
		cc.SAVE_STATUS,
		cc.STORAGE_PLACE,
		cc.UPDATE_TIME
		FROM
		cf_certificate cc
		LEFT JOIN oms_reg_procpersoninfo orp ON cc.A0184 = orp.IDNUMBER
		LEFT JOIN B01 b ON orp.RF_B0000 = b.B0100
		WHERE 1=1 AND cc.IS_VALID = 0
		<if test="name != null">
			AND cc.NAME like CONCAT(CONCAT('%', #{name}), '%')
			OR cc.PY like CONCAT(CONCAT('%',#{name}),'%')
		</if>

		<if test="zjhm != null">
			AND cc.ZJHM like CONCAT(CONCAT('%', #{zjhm}), '%')
		</if>

		<if test="CARD_STATUS != null">
			AND cc.CARD_STATUS = #{CARD_STATUS}
		</if>

		<if test="isLock != null">
			AND cc.IS_LOCK = #{isLock}
		</if>

		<if test="yxqz != null">
			AND cc.YXQZ &lt;= #{yxqz}
		</if>

		<if test="b0100 != null">
			AND b.B0100 in
			<foreach close=")" collection="b0100" index="index" item="b0100" open="(" separator=",">
				#{b0100}
			</foreach>
		</if>
		ORDER BY cc.update_time DESC
	</select>

	<select id="findCfById" parameterType="java.lang.String" resultType="com.hxoms.modules.passportCard.initialise.entity.CfCertificate">
        SELECT * FROM cf_certificate WHERE ID = #{id}
    </select>


	<select id="selectA0100ByQua" resultType="com.hxoms.modules.omsregcadre.entity.OmsRegProcpersoninfo">
        SELECT
            ID id,
            A0100 a0100,
            LICENCE_IDENTITY licenceIdentity
        FROM
            oms_reg_procpersoninfo
        WHERE
            IDNUMBER_GB = #{idNo}
        AND CONCAT(SURNAME,NAME) = #{name}
		AND CHECK_STATUS='1'
    </select>

	<select id="selectZJExisByQua" resultType="com.hxoms.modules.passportCard.initialise.entity.CfCertificate">
        SELECT
            ID id,
            ZJLX zjlx,
            ZJHM zjhm,
            QFRQ qfrq
        FROM
            cf_certificate
        WHERE
            oms_id =#{omsId}
    </select>
	<select id="selectRecordExisByQua" resultType="com.hxoms.modules.omsregcadre.entity.OmsEntryexitRecord">
      SELECT
          ID id,
          ID_TYPE idType,
          ID_NUMBER idNumber,
          OGE_DATE ogeDate,
          OGE_TIME ogeTime
      FROM
          oms_entryexit_record
      WHERE
          oms_id =#{omsId}
    </select>



	<select id="selectAllCertificate" resultType="com.hxoms.modules.passportCard.initialise.entity.parameterEntity.ImportInterface">
      SELECT
		NAME name,
	IF (
		SEX = '1',
		'男',
	IF (SEX = '2', '女', SEX)
	) sex,
	 ZJLX zjlx,
	 item_name zjlxName,
	 ZJHM zjhm,
	 YXQZ yxqz,
	 CSRQ csrq,
	 QFJG qfjg,
	 QFRQ qfrq,
	 CSDD csdd
	FROM
		cf_certificate
	LEFT JOIN sys_dict_item ON zjlx = item_code
	WHERE
		dict_code = 'ZJLX'
    </select>
	<select id="selectCertificateInfo" resultType="com.hxoms.modules.passportCard.initialise.entity.CfCertificate">
      SELECT
      	id,
        OMS_ID omsId,
        NAME NAME,
        SEX sex,
        GJ gj,
        CSRQ csrq,
        ZJLX zjlx,
        ZJHM zjhm,
        QFJG qfjg,
        QFRQ qfrq,
        CSDD csdd,
        YXQZ yxqz
        FROM
        cf_certificate
      WHERE
      ZJLX = #{zjlx}
      AND ZJHM = #{zjhm}
    </select>
	<select id="selectRegPerson" resultType="com.hxoms.modules.passportCard.initialise.entity.parameterEntity.RegProcpersoninfo">
		SELECT
		ID id,
		A0100 a0100,
		SURNAME surname,
		NAME name,
		if(SEX='1','男',if(SEX='2','女',SEX)) sex,
		NATION_NAME nationName,
		BIRTH_DATE birthDate,
		IDNUMBER_GB idnumberGb,
		REGISTE_RESIDENCE registeResidence,
		POLITICAL_AFFINAME politicalAffiname,
		(select item_name from sys_dict_item where dict_code='ZZZT' and item_code=INCUMBENCY_STATUS) incumbencyStatus,
		WORK_UNIT workUnit,
		POST post
		FROM
		oms_reg_procpersoninfo
		<choose>
			<when test="id!=null">
				WHERE ID = #{id}
				AND CHECK_STATUS='1'
			</when>
			<otherwise>
				WHERE  CONCAT(SURNAME, NAME) = #{name}
				AND BIRTH_DATE = DATE_FORMAT(#{csrq},'%Y-%m-%d')
				AND CHECK_STATUS='1'
			</otherwise>
		</choose>
	</select>

	<sql id="commonSql">
      SELECT
        a.ID id,
        a.OMS_ID omsId,
        b.RF_B0000 rfB0000,
        b.WORK_UNIT workUnit,
        (select item_name from sys_dict_item where dict_code='ZZZT' and item_code=b.INCUMBENCY_STATUS) incumbencyStatus,
        b.POST post,
        a.NAME name,
        if(a.sex='1','男',if(a.sex='2','女',a.sex)) sex,
        a.zjlx zjlx,
        (select item_name from sys_dict_item where dict_code='ZJLX' and item_code=a.zjlx) zjlxName,
        a.zjhm zjhm,
        a.yxqz yxqz,
        if(a.SURELY_UNIT='0','干部监督处',if(a.SURELY_UNIT='1','省委统战部(台办)',a.SURELY_UNIT)) surelyUnit,
        a.SURELY_WAY surelyWay,
        a.CABINET_NUM cabinetNum,
        a.PLACE place,
        a.CSRQ csrq,
        a.qfjg qfjg,
        a.QFRQ qfrq,
        a.CSDD csdd,
        a.EXCEPTION_MESSAGE exceptionMessage,
        a.gj,
        a.card_status cardStatus
      FROM
          cf_certificate a
      INNER JOIN oms_reg_procpersoninfo b ON a.OMS_ID = b.ID
    </sql>
	<select id="selectNotProvicdeCer" resultType="com.hxoms.modules.passportCard.initialise.entity.parameterEntity.CfCertificateInfo">
		<include refid="commonSql" />
		LEFT JOIN cf_certificate_collection c ON a.id=c.cer_id
		WHERE
		a.SAVE_STATUS = '2'
		AND a.CARD_STATUS = '5'
		AND c.CJ_STATUS is null
	</select>
	<select id="selectProNotstorCer" resultType="com.hxoms.modules.passportCard.initialise.entity.parameterEntity.CfCertificateInfo">
		<include refid="commonSql" />
		WHERE
		a.SAVE_STATUS = '1'
		AND a.CARD_STATUS = '4'
	</select>
	<select id="selectExceptionCer" resultType="com.hxoms.modules.passportCard.initialise.entity.parameterEntity.CfCertificateInfo">
		<include refid="commonSql" />
		WHERE
		a.SAVE_STATUS = '1'
		AND a.CARD_STATUS in ('3','5')
	</select>


	<!-- 注销申请查询证件 -->
	<select id="getCancellateLicense" resultType="java.util.Map">
		select
		cc.ID as id,
		cc.OMS_ID as omsId,
		orp.RF_B0000 as b0100,
		cc.NAME as name,
		cc.SEX as sex,
		cc.CSRQ as csrq,
		orp.WORK_UNIT as workUnit,
		orp.INCUMBENCY_STATUS as incumbencyStatus,
		orp.POST as post,
		cc.ZJLX as zjlx,
		cc.ZJHM as zjhm,
		cc.YXQZ as yxqz,
		cc.CARD_STATUS as cardStatus,
		cc.SAVE_STATUS as saveStatus,
		cc.QFJG as qfjg,
		cc.QFRQ as qfrq,
		cc.CSDD as csdd
		from cf_certificate cc
		join oms_reg_procpersoninfo orp on cc.OMS_ID = orp.ID
		<where>
			<trim suffixOverrides="and">
                <if test="1 == 1">cc.ZJLX in (1,2,4) and </if>
				<if test="b0100 != null">orp.RF_B0000=#{b0100} and </if>
				<if test="zjhm != null">cc.zjhm like concat('%',#{zjhm},'%') and </if>
				<if test="name != null">(cc.name like concat('%',#{name},'%')
					or cc.PY like concat('%',#{name},'%')) and
				</if>
			</trim>
		</where>
		order by csrq

	</select>

	<!-- 根据人员主键查询人员证照持有信息 -->
	<select id="getCfCertificateByA0100" resultType="java.util.Map">
		select
		cc.ID as id,
		cc.A0100 as a0100,
		cc.OMS_ID as omsId,
		cc.NAME as name,
		org.SEX as sex,
		org.WORK_UNIT as workUnit,
		org.POST as post,
		org.INCUMBENCY_STATUS as incumbencyStatus,
		cc.ZJLX as zjlx,
		cc.ZJHM as zjhm,
		org.BIRTH_DATE_GB as birthDateGb
		from
		cf_certificate cc
		join oms_reg_procpersoninfo org on cc.OMS_ID=org.ID
		<where>
			<trim suffixOverrides="and">
				<if test="a0100 != null">cc.a0100=#{a0100} and </if>
			</trim>
		</where>
	</select>

	<!-- 查询过期证照信息 -->
	<select id="getTransferExpiredLicenseInfo" resultType="java.util.Map">
		SELECT
		cc.ID as id,
		cc.OMS_ID AS omsId,
		cc.NAME AS name,
		cc.SEX AS sex,
		cc.CSRQ AS csrq,
		org.POST AS post,
		org.WORK_UNIT AS workUnit,
		cc.ZJLX AS zjlx,
		cc.ZJHM AS zjhm,
		cc.YXQZ AS yxqz,
		cc.ZJXS as zjxs,
		cc.CARD_STATUS AS cardStatus,
		cc.SAVE_STATUS AS saveStatus,
		cc.CABINET_NUM AS cabinetNum,
		cc.COUNTER_NUM AS counterNum,
		cc.PLACE AS place,
		cc.QFJG AS qfjg,
		cc.QFRQ AS qfrq,
		cc.CSDD AS csdd,
		b.B0100 AS b0100,
		getTime
		FROM
		cf_certificate cc
		JOIN oms_reg_procpersoninfo org ON cc.OMS_ID = org.ID
		JOIN b01 as b  on org.RF_B0000 = b.b0100
		left JOIN (
		SELECT
		ocgt.GET_TIME as getTime,
		ocgt.ZJHM  as hm
		FROM
		oms_cer_get_task AS ocgt
		ORDER BY
		ocgt.GET_TIME DESC
		LIMIT 1
		) AS ls ON hm = cc.ZJHM
		<where>
			<trim suffixOverrides="and">
				<if test="list != null">b.B0100 in
					<foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
						#{item}
					</foreach>
					and
				</if>
				<if test="zjlx != null">cc.ZJLX=#{zjlx} and </if>
				<if test="1==1">cc.CARD_STATUS='1' and </if>
				<if test="saveStatus != null">cc.SAVE_STATUS=#{saveStatus} and </if>
				<if test="expiredQueryStartTime != null and expiredQueryEndTime != null">
					cc.YXQZ between #{expiredQueryStartTime} and #{expiredQueryEndTime} and
				</if>
			</trim>
		</where>

	</select>

	<!-- 根据id查询证件的柜台号码 -->
	<select id="selectCounterNum" resultType="java.lang.Integer">
		select
			COUNTER_NUM
		from
			cf_certificate
		where
			id=#{id}

	</select>

	<!-- 盘点查询证照信息 -->
	<select id="selectOmsCerInfo" resultType="com.hxoms.modules.passportCard.initialise.entity.CfCertificate">
		select
		<include refid="Base_Column_List" />
		from
		cf_certificate
		<where>
			<trim suffixOverrides="and">
				<if test="cabinetNum != null">CABINET_NUM=#{cabinetNum} and </if>
				<if test="cardStatus != null">CARD_STATUS=#{cardStatus} and </if>
				<if test="surelyWay != null">SURELY_WAY=#{surelyWay} and </if>
				<if test="1 == 1">(SAVE_STATUS = '0' or SAVE_STATUS = '1') and </if>
				<if test="counterStartQuery != null and counterEndQuery != null">
					COUNTER_NUM between #{counterStartQuery} and #{counterEndQuery} and
				</if>
			</trim>
		</where>
	</select>

	<!-- 查询证照机柜子集合 -->
	<select id="getCerLicenseMachine" resultType="java.lang.String">
    select
        CABINET_NUM
    from
        cf_certificate
    where CABINET_NUM is not null
    group by CABINET_NUM
  </select>

	<!-- 存取记录 -->
	<select id="getCerAccessRecord" resultType="java.util.Map">
		select
			oce.STATUS as status,		#存取类型
			org.WORK_UNIT as workUnit,
			oce.NAME as name,
			org.SEX as sex,
			org.BIRTH_DATE_GB as birthDateGb,
			org.POST as post,
			oce.ZJLX as zjlx,
			oce.ZJHM as zjhm,
			oce.MODE as mode,   		#保管地点
			ocgt.GET_STATUS as getStatus,  #证照领取状态
			ocgt.DATA_SOURCE as dateSource, #数据来源
			ocgt.CREATE_TIME as createTime, #业务日期
			ocgt.HAPPEN_DATE as happenDate, #任务产生日期
			oce.OPERATE_TIME as  operateTime #存取时间

		from
			oms_cer_exit_entry_repertory oce
		join oms_cer_get_task ocgt
			on ocgt.ID = oce.GET_ID
		join oms_reg_procpersoninfo org
			on org.ID = ocgt.OMS_ID
		where oce.ZJHM=#{zjhm}
		order by
			oce.OPERATE_TIME
		desc
	</select>

	<select id="selectCjTask" resultType="com.hxoms.modules.passportCard.certificateCollect.entity.CfCertificateCollection">
		SELECT
			id,
			zjlx,
			zjhm
		FROM
			cf_certificate_collection
		WHERE
			OMS_ID = #{omsId}
		AND CJ_STATUS = '2'
	</select>
	<select id="selectCjNeedInfo" resultType="com.hxoms.modules.passportCard.initialise.entity.parameterEntity.CfCertificateInfo">
		SELECT
        a.ID id,
        a.OMS_ID omsId,
        b.RF_B0000 rfB0000,
        b.WORK_UNIT workUnit,
        a.NAME name,
        a.zjlx zjlx,
        a.zjhm zjhm
      FROM
          cf_certificate a
      INNER JOIN oms_reg_procpersoninfo b ON a.OMS_ID = b.ID
      WHERE a.id=#{id}
	</select>
	<select id="selectUserType" resultType="java.lang.String">
		SELECT
		IF (
			user_type = '10',
			'1','0'
		) userType
		FROM
			cf_user
		WHERE
			user_id = #{id}
	</select>

  <!--因出国境申请显示证照信息时用到-->
	<select id="selectByOmsId" resultMap="BaseResultMapExtend">
      select a.*,b.ITEM_NAME as saveStatusName,c.ITEM_NAME as cardStatusName from cf_certificate a
left join sys_dict_item b on a.SAVE_STATUS=b.ITEM_CODE and b.DICT_CODE='ZZBGZT'
left join sys_dict_item C on a.CARD_STATUS=C.ITEM_CODE and C.DICT_CODE='ZJZT'
where 1=1
<if test="omsId!=null and omsId!=''">
   and OMS_ID=#{omsId}
</if>
      <if test="cardStatus!=null and cardStatus.length>0">
        and CARD_STATUS in
        <foreach close=")" collection="cardStatus" index="index" item="item" open="(" separator=",">
          #{item}
        </foreach>
      </if>

    </select>

	<resultMap id="examineCertificateMap" type="com.hxoms.modules.passportCard.initialise.entity.CfCertificateSeeRes">
		<id column="ID" jdbcType="VARCHAR" property="id" />
		<result column="A0100" jdbcType="VARCHAR" property="a0100" />
		<result column="NAME" jdbcType="VARCHAR" property="name" />
		<result column="A0184" jdbcType="VARCHAR" property="a0184" />
		<result column="SEX" jdbcType="VARCHAR" property="sex" />
		<result column="CSRQ" jdbcType="DATE" property="csrq" />
		<result column="GJ" jdbcType="VARCHAR" property="gj" />
		<result column="ZJLX" jdbcType="INTEGER" property="zjlx" />
		<result column="CSDD" jdbcType="VARCHAR" property="csdd" />
	    <result column="ZJHM" jdbcType="VARCHAR" property="zjhm" />
        <result column="QFJG" jdbcType="VARCHAR" property="qfjg" />
        <result column="QFRQ" jdbcType="DATE" property="qfrq" />
	    <result column="YXQZ" jdbcType="DATE" property="yxqz" />
	    <result column="SURELY_WAY" jdbcType="VARCHAR" property="surelyWay" />
		<result column="SURELY_UNIT" jdbcType="VARCHAR" property="surelyUnit" />
	    <result column="CABINET_NUM" jdbcType="VARCHAR" property="cabinetNum" />
	    <result column="PLACE" jdbcType="VARCHAR" property="place" />
	    <result column="COUNTER_NUM" jdbcType="INTEGER" property="counterNum" />
		 <result column="REGISTE_RESIDENCE" jdbcType="VARCHAR" property="registeResidence" />
	</resultMap>
	
	<!-- 根据人员主键A0100查询证照信息 -->
	<select id="examineCertificate" resultMap="examineCertificateMap">
		select c.ID,
		c.A0100,
		c.NAME,
		c.SEX,
		c.CSRQ,
		c.GJ,
		c.ZJLX,
		c.CSDD,
		c.ZJHM,
		c.QFJG,
		c.QFRQ,
		c.YXQZ,
		c.SURELY_WAY,
		c.SURELY_UNIT,
		c.CABINET_NUM,
		c.PLACE,
		c.COUNTER_NUM,
		o.REGISTE_RESIDENCE
		from cf_certificate c
		LEFT JOIN oms_reg_procpersoninfo o on c.A0100 =o.A0100
		where c.ZJHM = #{passportNum,jdbcType=VARCHAR}  and c.A0100 = #{a0100,jdbcType=VARCHAR}
	</select>
	<select id="queryCertificateByOmsId" parameterType="java.lang.String" resultType="com.hxoms.modules.passportCard.initialise.entity.parameterEntity.ImportInterface">
		SELECT
			cf.NAME name,
			IF (
					cf.SEX = '1',
					'男',
					IF (cf.SEX = '2', '女', cf.SEX)
				) sex,
			cf.ZJLX zjlx,
			dic.item_name zjlxName,
			cf.ZJHM zjhm,
			cf.YXQZ yxqz,
			cf.CSRQ csrq,
			cf.QFJG qfjg,
			cf.QFRQ qfrq,
			cf.CSDD csdd,
		    cf.OMS_ID omsId,
			reg.rf_B0000,
      reg.work_unit as b0101
		FROM
			cf_certificate cf
				LEFT JOIN sys_dict_item dic ON cf.zjlx = dic.item_code
				LEFT JOIN oms_reg_procpersoninfo reg on cf.OMS_ID = reg.ID
		WHERE
		dic.dict_code = 'ZJLX'
		<if test="b0100!=null and b0100!=''">
			AND  reg.RF_B0000 = #{b0100}
		</if>
	</select>



	<!-- WQF ADD 导出未上缴证照统计 -->
	<sql id="exportNotProvicdeCerSql">
      SELECT
      	a.NAME name,
      	if(a.sex='1','男',if(a.sex='2','女',a.sex)) sex,
      	b.WORK_UNIT workUnit,
      	(select item_name from sys_dict_item where dict_code='ZZZT' and item_code=b.INCUMBENCY_STATUS) incumbencyStatus,
      	b.POST post,
      	(select item_name from sys_dict_item where dict_code='ZJLX' and item_code=a.zjlx) zjlxName,
      	a.zjhm zjhm,
      	a.yxqz yxqz,
      	if(a.SURELY_UNIT='0','干部监督处',if(a.SURELY_UNIT='1','省委统战部(台办)',a.SURELY_UNIT)) surelyUnit,
      	a.CSRQ csrq,
      	a.qfjg qfjg,
      	a.QFRQ qfrq,
      	a.CSDD csdd
      FROM
          cf_certificate a
      INNER JOIN oms_reg_procpersoninfo b ON a.OMS_ID = b.ID
    </sql>
	<select id="exportNotProvicdeCer" parameterType="java.util.List" resultType="com.hxoms.modules.passportCard.initialise.entity.exportExcel.ExportNotProvicdeCer">
		<include refid="exportNotProvicdeCerSql" />
		LEFT JOIN cf_certificate_collection c ON a.id=c.cer_id
		WHERE
		a.SAVE_STATUS = '2'
		AND a.CARD_STATUS = '5'
		AND c.CJ_STATUS is null

		AND a.ID in
		<foreach close=")" collection="ids" index="index" item="item" open="(" separator=",">
			#{item}
		</foreach>

	</select>


	<!-- WQF ADD 导出存疑证照统计-导出证照查询-->
	<select id="exportExceptionCer" parameterType="java.util.List" resultType="com.hxoms.modules.passportCard.initialise.entity.exportExcel.ExportExceptionCer">
		SELECT
		concat(b.surName,b.name) name,
		b.IDNUMBER_GB idnumberGb,
		b.SEX sex,
		b.BIRTH_DATE birthDate
		FROM
		cf_certificate a
		INNER JOIN oms_reg_procpersoninfo b ON a.OMS_ID = b.ID
		WHERE
		'1'= '1'
		<!--WQF ADD 勾选查询使用-->
		<if test="ids!=null">
		AND a.ID in
		<foreach close=")" collection="ids" index="index" item="item" open="(" separator=",">
			#{item}
		</foreach>
		</if>

	</select>

	<!-- WQF ADD 导出存疑证照统计-导出证照查询-->
	<select id="exportExceptionCerForOmsId" parameterType="java.util.List" resultType="com.hxoms.modules.passportCard.initialise.entity.exportExcel.ExportExceptionCer">
		SELECT
		concat(b.surName,b.name) name,
		b.IDNUMBER_GB idnumberGb,
		b.SEX sex,
		b.BIRTH_DATE birthDate
		FROM
		 oms_reg_procpersoninfo b
		WHERE
		'1'= '1'
		<!--WQF ADD 勾选查询使用-->
		<if test="ids!=null">
			AND b.ID in
			<foreach close=")" collection="ids" index="index" item="item" open="(" separator=",">
				#{item}
			</foreach>
		</if>

	</select>


</mapper>