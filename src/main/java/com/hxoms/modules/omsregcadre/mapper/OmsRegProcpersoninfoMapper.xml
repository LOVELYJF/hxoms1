<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hxoms.modules.omsregcadre.mapper.OmsRegProcpersoninfoMapper">
  <resultMap id="BaseResultMap" type="com.hxoms.modules.omsregcadre.entity.OmsRegProcpersoninfo">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="A0100" jdbcType="VARCHAR" property="a0100" />
    <result column="RF_B0000" jdbcType="VARCHAR" property="rfB0000" />
    <result column="INBOUND_FLAG" jdbcType="CHAR" property="inboundFlag" />
    <result column="RF_STATUS" jdbcType="CHAR" property="rfStatus" />
    <result column="CHECK_STATUS" jdbcType="CHAR" property="checkStatus" />
    <result column="INCUMBENCY_STATUS" jdbcType="CHAR" property="incumbencyStatus" />
    <result column="DATA_TYPE" jdbcType="CHAR" property="dataType" />
    <result column="SURNAME" jdbcType="VARCHAR" property="surname" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="SEX" jdbcType="VARCHAR" property="sex" />
    <result column="BIRTH_DATE" jdbcType="DATE" property="birthDate" />
    <result column="BIRTH_DATE_GB" jdbcType="DATE" property="birthDateGb" />
    <result column="NATION_CODE" jdbcType="VARCHAR" property="nationCode" />
    <result column="NATION_NAME" jdbcType="VARCHAR" property="nationName" />
    <result column="IDNUMBER_GB" jdbcType="CHAR" property="idnumberGb" />
    <result column="IDNUMBER_GA" jdbcType="CHAR" property="idnumberGa" />
    <result column="POLITICAL_AFFICODE" jdbcType="VARCHAR" property="politicalAfficode" />
    <result column="POLITICAL_AFFINAME" jdbcType="VARCHAR" property="politicalAffiname" />
    <result column="HEALTH_CODE" jdbcType="VARCHAR" property="healthCode" />
    <result column="HEALTH" jdbcType="VARCHAR" property="health" />
    <result column="REGISTE_RESIDENCE_CODE" jdbcType="VARCHAR" property="registeResidenceCode" />
    <result column="REGISTE_RESIDENCE" jdbcType="VARCHAR" property="registeResidence" />
    <result column="WORK_UNIT" jdbcType="VARCHAR" property="workUnit" />
    <result column="POST_CODE" jdbcType="VARCHAR" property="postCode" />
    <result column="POST" jdbcType="VARCHAR" property="post" />
    <result column="PERSON_MANAGER" jdbcType="VARCHAR" property="personManager" />
    <result column="IDENTITY_CODE" jdbcType="CHAR" property="identityCode" />
    <result column="IDENTITY" jdbcType="VARCHAR" property="identity" />
    <result column="SECRET_LEVEL" jdbcType="VARCHAR" property="secretLevel" />
    <result column="DECRYPT_STARTDATE" jdbcType="DATE" property="decryptStartdate" />
    <result column="DECRYPT_ENDDATE" jdbcType="DATE" property="decryptEnddate" />
    <result column="MAIN_LEADER" jdbcType="CHAR" property="mainLeader" />
    <result column="LICENCE_IDENTITY" jdbcType="INTEGER" property="licenceIdentity" />
    <result column="NF" jdbcType="CHAR" property="nf" />
    <result column="FJGNF" jdbcType="CHAR" property="fjgnf" />
    <result column="XRXGW" jdbcType="CHAR" property="xrxgw" />
    <result column="LQGZ" jdbcType="CHAR" property="lqgz" />
    <result column="DQGZ" jdbcType="CHAR" property="dqgz" />
    <result column="REPLYOPINION" jdbcType="CHAR" property="replyopinion" />
    <result column="ABROADTIME" jdbcType="DATE" property="abroadtime" />
    <result column="REASON" jdbcType="VARCHAR" property="reason" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="CREATE_USER" jdbcType="VARCHAR" property="createUser" />
    <result column="MODIFY_TIME" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="MODIFY_USER" jdbcType="VARCHAR" property="modifyUser" />
    <result column="SORT_ID" jdbcType="INTEGER" property="sortId" />
    <result column="PY" jdbcType="VARCHAR" property="py" />
    <result column="SECRET_POST" jdbcType="VARCHAR" property="secretPost" />
    <result column="EXIT_DATE" jdbcType="DATE" property="exitDate" />
    <result column="FINISH_TIME" jdbcType="DATE" property="finishTime"/>
  </resultMap>
  <sql id="Base_Column_List">
    ID, A0100, RF_B0000, INBOUND_FLAG, RF_STATUS, CHECK_STATUS, INCUMBENCY_STATUS, DATA_TYPE, 
    SURNAME, NAME, SEX, BIRTH_DATE, BIRTH_DATE_GB,IDNUMBER_GA, NATION_CODE, NATION_NAME,
    IDNUMBER_GB, POLITICAL_AFFICODE,POLITICAL_AFFINAME, HEALTH_CODE, HEALTH,
    REGISTE_RESIDENCE_CODE, REGISTE_RESIDENCE, WORK_UNIT, POST_CODE, POST, PERSON_MANAGER,
    IDENTITY_CODE, IDENTITY, SECRET_LEVEL, DECRYPT_STARTDATE, DECRYPT_ENDDATE, MAIN_LEADER,
    LICENCE_IDENTITY, NF, FJGNF, XRXGW, LQGZ, DQGZ, REPLYOPINION, ABROADTIME, REASON, CREATE_TIME,
    CREATE_USER, MODIFY_TIME,MODIFY_USER, SORT_ID, PY, SECRET_POST,EXIT_DATE,FINISH_TIME
  </sql>


  <select id="selectRegProcpersonInfo" resultType="java.lang.String">
    select A0100 from OMS_REG_PROCPERSONINFO
  </select>

  <select id="selectProcpersoninfoList" resultMap="BaseResultMap" parameterType="com.hxoms.modules.omsregcadre.entity.OmsRegProcpersoninfo">
    select * from  OMS_REG_PROCPERSONINFO
    where  (RF_STATUS = 0 and DATA_TYPE = 1) or (INCUMBENCY_STATUS = 9 or DATA_TYPE = 2)
    <if test="rfB0000!=null and rfB0000!=''">
      and RF_B0000 = #{rfB0000}
    </if>
    order by SURNAME,NAME,WORK_UNIT asc
  </select>

  <select id="selectA0100ByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
    select A0100,IDNUMBER_GB idnumberGb,b.b0101 workUnit,RF_B0000,INCUMBENCY_STATUS incumbencyStatus
    from OMS_REG_PROCPERSONINFO t
    left join b01 b on t.RF_B0000 = b.b0100
    where 1=1
    <if test="b0100 !=null and b0100 !=''">
        and t.RF_B0000 = #{b0100}
    </if>
    <if test="idCardNum !=null and idCardNum !=''">
        and t.IDNUMBER_GB = #{idCardNum}
    </if>
  </select>

  <select id="selectRegPersonInfoList" parameterType="com.hxoms.modules.omsregcadre.entity.paramentity.OmsRegProcpersoninfoIPagParam" resultType="com.hxoms.modules.omsregcadre.entity.OmsRegProcpersoninfo">
      select * from oms_reg_procpersoninfo where 1=1
      <if test="secretLevel !=null and secretLevel !=''">
        and SECRET_LEVEL = #{secretLevel}
      </if>
      <if test="identityCode !=null and identityCode !=''">
        and IDENTITY_CODE = #{identityCode}
      </if>
      <if test="incumbencyStatus !=null and incumbencyStatus !=''">
        and INCUMBENCY_STATUS = #{incumbencyStatus}
      </if>
      <if test="inboundFlag !=null and inboundFlag !=''">
        and INBOUND_FLAG = #{inboundFlag}
      </if>
      <if test="rfStatus !=null and rfStatus !=''">
        and RF_STATUS = #{rfStatus}
      </if>
      <if test="checkStatus !=null and checkStatus !=''">
        and CHECK_STATUS = #{checkStatus}
      </if>
      <if test="postCode !=null and postCode !=''">
        and POST_CODE = #{postCode}
      </if>
      <if test="rfB0000 !=null and rfB0000 !=''">
        and RF_B0000 = #{rfB0000}
      </if>
      <if test="name!=null and name!=''">
        AND ((CONCAT(IFNULL(SURNAME,''),IFNULL(NAME,'')) LIKE '%${name}%') or (SURNAME LIKE '%${name}%'))
      </if>
    order by SURNAME,NAME,WORK_UNIT asc
  </select>

  <select id="selectPersonAndAllowRevoke" parameterType="com.hxoms.modules.omsregcadre.entity.OmsRegProcpersoninfo" resultType="com.hxoms.modules.omsregcadre.entity.OmsRegProcpersoninfo">
    SELECT
      info.SURNAME,
      info.NAME,
      info.A0100
    FROM oms_reg_procpersoninfo info
           LEFT JOIN oms_smr_personinfo smr on info.A0100 = smr.A0100
           LEFT JOIN a01 a1 on info.A0100 = a1.a0100
           LEFT JOIN a30 a3 on a1.a0100 = a3.a0100
    WHERE a3.a3001='免职'
    <if test="name!=null and name!=''">
      AND ((CONCAT(IFNULL(SURNAME,''),IFNULL(NAME,'')) LIKE '%${name}%') or (SURNAME LIKE '%${name}%'))
    </if>
  </select>


  <insert id="batchAddorpInfo" parameterType="list">
      insert into oms_reg_procpersoninfo (ID, A0100, RF_B0000,
              INBOUND_FLAG, RF_STATUS, CHECK_STATUS,
              INCUMBENCY_STATUS, DATA_TYPE, SURNAME,
              NAME, SEX, BIRTH_DATE, BIRTH_DATE_GB,NATION_CODE,
              NATION_NAME, IDNUMBER_GB,IDNUMBER_GA, POLITICAL_AFFICODE,POLITICAL_AFFINAME,
              HEALTH, REGISTE_RESIDENCE_CODE, REGISTE_RESIDENCE,
              WORK_UNIT, POST_CODE, POST,
              PERSON_MANAGER, IDENTITY_CODE, IDENTITY,
              SECRET_LEVEL, DECRYPT_STARTDATE, DECRYPT_ENDDATE,
              MAIN_LEADER, LICENCE_IDENTITY, NF,
              FJGNF, XRXGW, LQGZ, DQGZ,
              REPLYOPINION, ABROADTIME, REASON,
              CREATE_TIME,CREATE_USER,MODIFY_TIME,MODIFY_USER,
              SORT_ID,PY,SECRET_POST,EXIT_DATE,FINISH_TIME
    )
    values
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=VARCHAR}, #{item.a0100,jdbcType=VARCHAR}, #{item.rfB0000,jdbcType=VARCHAR},
      #{item.inboundFlag,jdbcType=CHAR}, #{item.rfStatus,jdbcType=CHAR}, #{item.checkStatus,jdbcType=CHAR},
      #{item.incumbencyStatus,jdbcType=CHAR}, #{item.dataType,jdbcType=CHAR}, #{item.surname,jdbcType=VARCHAR},
      #{item.name,jdbcType=VARCHAR}, #{item.sex,jdbcType=VARCHAR}, #{item.birthDate,jdbcType=DATE},
      #{item.birthDateGb,jdbcType=DATE},#{item.nationCode,jdbcType=VARCHAR},
      #{item.nationName,jdbcType=VARCHAR}, #{item.idnumberGb,jdbcType=CHAR}, #{item.idnumberGa,jdbcType=CHAR},
      #{item.politicalAfficode,jdbcType=VARCHAR},#{item.politicalAffiname,jdbcType=VARCHAR},
      #{item.health,jdbcType=VARCHAR}, #{item.registeResidenceCode,jdbcType=VARCHAR}, #{item.registeResidence,jdbcType=VARCHAR},
      #{item.workUnit,jdbcType=VARCHAR}, #{item.postCode,jdbcType=VARCHAR}, #{item.post,jdbcType=VARCHAR},
      #{item.personManager,jdbcType=VARCHAR}, #{item.identityCode,jdbcType=CHAR}, #{item.identity,jdbcType=VARCHAR},
      #{item.secretLevel,jdbcType=VARCHAR}, #{item.decryptStartdate,jdbcType=DATE}, #{item.decryptEnddate,jdbcType=DATE},
      #{item.mainLeader,jdbcType=CHAR}, #{item.licenceIdentity,jdbcType=INTEGER}, #{item.nf,jdbcType=CHAR},
      #{item.fjgnf,jdbcType=CHAR}, #{item.xrxgw,jdbcType=CHAR}, #{item.lqgz,jdbcType=CHAR}, #{item.dqgz,jdbcType=CHAR},
      #{item.replyopinion,jdbcType=CHAR}, #{item.abroadtime,jdbcType=DATE}, #{item.reason,jdbcType=VARCHAR},
      #{item.createTime,jdbcType=DATE}, #{item.createUser,jdbcType=VARCHAR},#{item.modifyTime,jdbcType=DATE},
      #{item.modifyUser,jdbcType=VARCHAR},#{item.sortId,jdbcType=VARCHAR},#{item.py,jdbcType=VARCHAR},
      #{item.secretPost,jdbcType=VARCHAR},#{item.exitDate,jdbcType=DATE},#{item.finishTime,jdbcType=DATE}
      )
    </foreach>

	</insert>

    <select id="selectInboudFlagCount" resultType="com.hxoms.modules.omsregcadre.entity.StatisticsCountVo">
      SELECT
        T_Status.CODE,
        T_Status.NAME,
        IFNULL(T_Main.Cnt, '0') VALUE
      FROM
        (
          SELECT * FROM (
                SELECT 'U' code, '新增' name
              UNION
                SELECT 'I' code, '修改' name
              UNION
                SELECT 'D' code, '撤销' name
            ) T_Status
        ) T_Status
        LEFT JOIN (
          SELECT INBOUND_FLAG, Count(INBOUND_FLAG) Cnt
          FROM oms_reg_procpersoninfo  GROUP BY  INBOUND_FLAG
        ) T_Main ON T_Main.INBOUND_FLAG = T_Status.code
    </select>

    <select id="selectIdentityCodeCount" resultType="com.hxoms.modules.omsregcadre.entity.StatisticsCountVo">
      SELECT
        T_Status.CODE,
        T_Status.NAME,
        IFNULL(T_Main.Cnt, '0') VALUE
      FROM
        (
        SELECT * FROM (
              SELECT '1' code, '省管干部' name
            UNION
              SELECT '2' code, '科级以上公务员' name
            UNION
              SELECT '3' code, '涉密人员' name
            UNION
              SELECT '4' code, '重要岗位人' name
            UNION
              SELECT '5' code, '重点监管人员' name
            UNION
              SELECT '9' code, '其他人员' name
            ) T_Status
        ) T_Status
        LEFT JOIN (
        SELECT IDENTITY_CODE, Count(IDENTITY_CODE) Cnt
        FROM oms_reg_procpersoninfo  GROUP BY  IDENTITY_CODE
        ) T_Main ON T_Main.IDENTITY_CODE = T_Status.code

    </select>

  <select id="selectAllFlagCount" resultType="com.hxoms.modules.omsregcadre.entity.StatisticsCountVo">
    select
      count(orp.MAIN_LEADER=1) as acount,-- 主要领导
      count(orp.NF='1') as bcount,-- 裸官
      count(orp.SECRET_LEVEL=3)as count,-- 核心涉密人员
      count(orp.SECRET_LEVEL=2) as dcount,-- 一般涉密人员
      count(orp.REPLYOPINION=1)as ecount,-- 纪委不回复意见人员1是，0否
      count(orp.LQGZ=1)as fcount, -- 离琼挂职
      count(orp.DQGZ=1)as gcount, -- 到琼挂职
      (select count(1) from oms_reg_procpersoninfo orp left join oms_sup_suspend_person oss on orp.A0100 = oss.A0100 where oss.status=0)as hcount  -- 锁定出国
    from oms_reg_procpersoninfo orp
  </select>


  <select id="selectMergeList" resultMap="BaseResultMap">
    select * from oms_reg_procpersoninfo where 1=1
    and (RF_STATUS = '0' AND DATA_TYPE = '1') or (CHECK_STATUS = '0' AND DATA_TYPE = '2')
  </select>

  <select id="selectListById" resultType="com.hxoms.modules.omsregcadre.entity.OmsRegProcpersoninfo" parameterType="java.lang.String">
    select * from oms_reg_procpersoninfo where 1=1
    <if test="id!=null and id!=''">
      and id in(#{id})
    </if>
  </select>


    <update id="updateRegProcpersoninfo" parameterType="com.hxoms.modules.omsregcadre.entity.OmsRegProcpersoninfo">
        update oms_reg_procpersoninfo set  RF_STATUS = #{rfStatus}
        where RF_STATUS!='1'
        <if test="id!=null and id!=''">
            and id in(#{id})
        </if>
    </update>

    <select id="searchRevokeRegPersonList" parameterType="com.hxoms.modules.omsregcadre.entity.OmsRegProcpersoninfo" resultType="java.util.List">
        select * from oms_reg_procpersoninfo where 1=1
            and INBOUND_FLAG != 'D'
            and DATA_TYPE = '2'
            and INCUMBENCY_STATUS not in (1,7)
            and ID not in (select rf_id from oms_reg_revokeapply where status!='7')
        <if test="idnumberGa !=null and idnumberGa !=''">
            and IDNUMBER_GA = #{idnumberGa}
        </if>
        <if test="name!=null and name!=''">
            AND ((CONCAT(IFNULL(SURNAME,''),IFNULL(NAME,'')) LIKE '%${name}%') or (SURNAME LIKE '%${name}%'))
        </if>
        order by SURNAME,NAME,WORK_UNIT asc
    </select>

</mapper>