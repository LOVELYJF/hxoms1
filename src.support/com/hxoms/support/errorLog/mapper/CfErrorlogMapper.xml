<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hxoms.support.errorLog.mapper.CfErrorlogMapper">
  <resultMap id="BaseResultMap" type="com.hxoms.support.errorLog.entity.CfErrorlog">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="occur_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hxoms.support.errorLog.entity.CfErrorlogWithBLOBs">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="occur_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="error_info" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
      <arg column="error_trace" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, occur_date
  </sql>
  <sql id="Blob_Column_List">
    error_info, error_trace
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.hxoms.support.errorLog.entity.CfErrorlogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cf_errorlog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hxoms.support.errorLog.entity.CfErrorlogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from cf_errorlog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cf_errorlog
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from cf_errorlog
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.hxoms.support.errorLog.entity.CfErrorlogWithBLOBs">
    insert into cf_errorlog (id, occur_date, error_info, 
      error_trace)
    values (#{id,jdbcType=VARCHAR}, #{occurDate,jdbcType=TIMESTAMP}, #{errorInfo,jdbcType=LONGVARCHAR}, 
      #{errorTrace,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hxoms.support.errorLog.entity.CfErrorlogWithBLOBs">
    insert into cf_errorlog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="occurDate != null">
        occur_date,
      </if>
      <if test="errorInfo != null">
        error_info,
      </if>
      <if test="errorTrace != null">
        error_trace,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="occurDate != null">
        #{occurDate,jdbcType=TIMESTAMP},
      </if>
      <if test="errorInfo != null">
        #{errorInfo,jdbcType=LONGVARCHAR},
      </if>
      <if test="errorTrace != null">
        #{errorTrace,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

</mapper>