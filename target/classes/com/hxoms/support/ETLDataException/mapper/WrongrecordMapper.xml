<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hxoms.support.ETLDataException.mapper.WrongrecordMapper">
  <resultMap id="BaseResultMap" type="com.hxoms.support.ETLDataException.entity.Wrongrecord">
    <constructor>
      <idArg column="Id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="SystemName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="ApplicationId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="TableId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="TableName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="FieldName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="OccurDate" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="State" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="DealDepartment" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="DealStaff" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="DealDate" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="DealInfo" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="ErrorStep" javaType="java.lang.String" jdbcType="CHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hxoms.support.ETLDataException.entity.Wrongrecord">
    <constructor>
      <idArg column="Id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="SystemName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="ApplicationId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="TableId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="TableName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="FieldName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="OccurDate" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="State" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="DealDepartment" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="DealStaff" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="DealDate" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="DealInfo" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="ErrorStep" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="ErrorInfo" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, SystemName, ApplicationId, TableId, TableName, FieldName, OccurDate, State, DealDepartment, 
    DealStaff, DealDate, DealInfo, ErrorStep
  </sql>
  <sql id="Blob_Column_List">
    ErrorInfo
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.hxoms.support.ETLDataException.entity.WrongrecordExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from wrongrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hxoms.support.ETLDataException.entity.WrongrecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from wrongrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from wrongrecord
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from wrongrecord
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hxoms.support.ETLDataException.entity.Wrongrecord">
    insert into wrongrecord (Id, SystemName, ApplicationId, 
      TableId, TableName, FieldName, 
      OccurDate, State, DealDepartment, 
      DealStaff, DealDate, DealInfo, 
      ErrorStep, ErrorInfo)
    values (#{id,jdbcType=INTEGER}, #{systemname,jdbcType=VARCHAR}, #{applicationid,jdbcType=VARCHAR}, 
      #{tableid,jdbcType=VARCHAR}, #{tablename,jdbcType=VARCHAR}, #{fieldname,jdbcType=VARCHAR}, 
      #{occurdate,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, #{dealdepartment,jdbcType=VARCHAR}, 
      #{dealstaff,jdbcType=VARCHAR}, #{dealdate,jdbcType=TIMESTAMP}, #{dealinfo,jdbcType=VARCHAR}, 
      #{errorstep,jdbcType=CHAR}, #{errorinfo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hxoms.support.ETLDataException.entity.Wrongrecord">
    insert into wrongrecord
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="systemname != null">
        SystemName,
      </if>
      <if test="applicationid != null">
        ApplicationId,
      </if>
      <if test="tableid != null">
        TableId,
      </if>
      <if test="tablename != null">
        TableName,
      </if>
      <if test="fieldname != null">
        FieldName,
      </if>
      <if test="occurdate != null">
        OccurDate,
      </if>
      <if test="state != null">
        State,
      </if>
      <if test="dealdepartment != null">
        DealDepartment,
      </if>
      <if test="dealstaff != null">
        DealStaff,
      </if>
      <if test="dealdate != null">
        DealDate,
      </if>
      <if test="dealinfo != null">
        DealInfo,
      </if>
      <if test="errorstep != null">
        ErrorStep,
      </if>
      <if test="errorinfo != null">
        ErrorInfo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="systemname != null">
        #{systemname,jdbcType=VARCHAR},
      </if>
      <if test="applicationid != null">
        #{applicationid,jdbcType=VARCHAR},
      </if>
      <if test="tableid != null">
        #{tableid,jdbcType=VARCHAR},
      </if>
      <if test="tablename != null">
        #{tablename,jdbcType=VARCHAR},
      </if>
      <if test="fieldname != null">
        #{fieldname,jdbcType=VARCHAR},
      </if>
      <if test="occurdate != null">
        #{occurdate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="dealdepartment != null">
        #{dealdepartment,jdbcType=VARCHAR},
      </if>
      <if test="dealstaff != null">
        #{dealstaff,jdbcType=VARCHAR},
      </if>
      <if test="dealdate != null">
        #{dealdate,jdbcType=TIMESTAMP},
      </if>
      <if test="dealinfo != null">
        #{dealinfo,jdbcType=VARCHAR},
      </if>
      <if test="errorstep != null">
        #{errorstep,jdbcType=CHAR},
      </if>
      <if test="errorinfo != null">
        #{errorinfo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hxoms.support.ETLDataException.entity.Wrongrecord">
    update wrongrecord
    <set>
      <if test="systemname != null">
        SystemName = #{systemname,jdbcType=VARCHAR},
      </if>
      <if test="applicationid != null">
        ApplicationId = #{applicationid,jdbcType=VARCHAR},
      </if>
      <if test="tableid != null">
        TableId = #{tableid,jdbcType=VARCHAR},
      </if>
      <if test="tablename != null">
        TableName = #{tablename,jdbcType=VARCHAR},
      </if>
      <if test="fieldname != null">
        FieldName = #{fieldname,jdbcType=VARCHAR},
      </if>
      <if test="occurdate != null">
        OccurDate = #{occurdate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        State = #{state,jdbcType=INTEGER},
      </if>
      <if test="dealdepartment != null">
        DealDepartment = #{dealdepartment,jdbcType=VARCHAR},
      </if>
      <if test="dealstaff != null">
        DealStaff = #{dealstaff,jdbcType=VARCHAR},
      </if>
      <if test="dealdate != null">
        DealDate = #{dealdate,jdbcType=TIMESTAMP},
      </if>
      <if test="dealinfo != null">
        DealInfo = #{dealinfo,jdbcType=VARCHAR},
      </if>
      <if test="errorstep != null">
        ErrorStep = #{errorstep,jdbcType=CHAR},
      </if>
      <if test="errorinfo != null">
        ErrorInfo = #{errorinfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hxoms.support.ETLDataException.entity.Wrongrecord">
    update wrongrecord
    set SystemName = #{systemname,jdbcType=VARCHAR},
      ApplicationId = #{applicationid,jdbcType=VARCHAR},
      TableId = #{tableid,jdbcType=VARCHAR},
      TableName = #{tablename,jdbcType=VARCHAR},
      FieldName = #{fieldname,jdbcType=VARCHAR},
      OccurDate = #{occurdate,jdbcType=TIMESTAMP},
      State = #{state,jdbcType=INTEGER},
      DealDepartment = #{dealdepartment,jdbcType=VARCHAR},
      DealStaff = #{dealstaff,jdbcType=VARCHAR},
      DealDate = #{dealdate,jdbcType=TIMESTAMP},
      DealInfo = #{dealinfo,jdbcType=VARCHAR},
      ErrorStep = #{errorstep,jdbcType=CHAR},
      ErrorInfo = #{errorinfo,jdbcType=LONGVARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hxoms.support.ETLDataException.entity.Wrongrecord">
    update wrongrecord
    set SystemName = #{systemname,jdbcType=VARCHAR},
      ApplicationId = #{applicationid,jdbcType=VARCHAR},
      TableId = #{tableid,jdbcType=VARCHAR},
      TableName = #{tablename,jdbcType=VARCHAR},
      FieldName = #{fieldname,jdbcType=VARCHAR},
      OccurDate = #{occurdate,jdbcType=TIMESTAMP},
      State = #{state,jdbcType=INTEGER},
      DealDepartment = #{dealdepartment,jdbcType=VARCHAR},
      DealStaff = #{dealstaff,jdbcType=VARCHAR},
      DealDate = #{dealdate,jdbcType=TIMESTAMP},
      DealInfo = #{dealinfo,jdbcType=VARCHAR},
      ErrorStep = #{errorstep,jdbcType=CHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>